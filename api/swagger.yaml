---
swagger: "2.0"
info:
  description: "This is a simple bookstore server with a book inventory, users and\
    \ a shopping cart."
  version: "1.0.0"
  title: "Shelf Awareness Bookstore"
  license:
    name: "Apache-2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8090"
basePath: "/v2"
tags:
  - name: "book"
    description: "Book's fact sheet"
  - name: "author"
    description: "Information about author"
schemes:
  - "http"
paths:
  /books:
    get:
      tags:
        - "book"
      summary: "Books available in the inventory"
      description: "List of books available in the inventory"
      operationId: "booksGET"
      produces:
        - "application/json"
      parameters:
        - name: "offset"
          in: "query"
          description: "Pagination offset. Default is 0."
          required: false
          type: "integer"
        - name: "limit"
          in: "query"
          description: "Maximum number of items per page. Default is 20 and cannot exceed\
          \ 500."
          required: false
          type: "integer"
          default: 20
      responses:
        200:
          description: "A collection of Books"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Book"
        404:
          description: "Unexpected error"
      x-swagger-router-controller: "Book"
  /books/favorite:
    get:
      tags:
        - "book"
      summary: "Favorite readings available in the inventory"
      description: "List of favorite books available in the inventory"
      operationId: "favoriteReadingsGET"
      produces:
        - "application/json"
      parameters:
        - name: "offset"
          in: "query"
          description: "Pagination offset. Default is 0."
          required: false
          type: "integer"
        - name: "limit"
          in: "query"
          description: "Maximum number of items per page. Default is 20 and cannot exceed\
          \ 500."
          required: false
          type: "integer"
          default: 20
      responses:
        200:
          description: "A collection of Books"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Book"
        404:
          description: "Unexpected error"
      x-swagger-router-controller: "Book"
  /books/bestSellers:
    get:
      tags:
        - "book"
      summary: "Best sellers available in the inventory"
      description: "List of Best seller books available in the inventory"
      operationId: "bestSellersGET"
      produces:
        - "application/json"
      parameters:
        - name: "offset"
          in: "query"
          description: "Pagination offset. Default is 0."
          required: false
          type: "integer"
        - name: "limit"
          in: "query"
          description: "Maximum number of items per page. Default is 20 and cannot exceed\
          \ 500."
          required: false
          type: "integer"
          default: 20
      responses:
        200:
          description: "A collection of Books"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Book"
        404:
          description: "Unexpected error"
      x-swagger-router-controller: "Book"
  /books/{bookId}:
    get:
      tags:
        - "book"
      summary: "Find book by ID"
      description: "Returns a book"
      operationId: "getBookById"
      produces:
        - "application/json"
      parameters:
        - name: "bookId"
          in: "path"
          description: "ID of book to return"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Book"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Book not found"
      x-swagger-router-controller: "Book"
  /books/{bookId}/similarBooks:
    get:
      tags:
        - "book"
      summary: "Find similar books to book with given ID"
      description: "Returns a list of books"
      operationId: "similarBooksGET"
      produces:
        - "application/json"
      parameters:
        - name: "bookId"
          in: "path"
          description: "ID of book for which similar books need to be found"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Book"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Book not found"
      x-swagger-router-controller: "Book"
  /genres:
    get:
      tags:
        - "genre"
      summary: "Genres available in the inventory"
      description: "List of genres available in the inventory"
      operationId: "genresGET"
      produces:
        - "application/json"
      parameters:
        - name: "offset"
          in: "query"
          description: "Pagination offset. Default is 0."
          required: false
          type: "integer"
        - name: "limit"
          in: "query"
          description: "Maximum number of items per page. Default is 20 and cannot exceed\
          \ 500."
          required: false
          type: "integer"
          default: 20
      responses:
        200:
          description: "A collection of genres"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Book"
        404:
          description: "Unexpected error"
      x-swagger-router-controller: "Genre"
  /themes:
    get:
      tags:
        - "theme"
      summary: "Themes available in the inventory"
      description: "List of themes available in the inventory"
      operationId: "themesGET"
      produces:
        - "application/json"
      parameters:
        - name: "offset"
          in: "query"
          description: "Pagination offset. Default is 0."
          required: false
          type: "integer"
        - name: "limit"
          in: "query"
          description: "Maximum number of items per page. Default is 20 and cannot exceed\
          \ 500."
          required: false
          type: "integer"
          default: 20
      responses:
        200:
          description: "A collection of themes"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Theme"
        404:
          description: "Unexpected error"
      x-swagger-router-controller: "Theme"
  /authors:
    get:
      tags:
        - "author"
      summary: "Authors available in the inventory"
      description: "List of authors available in the inventory"
      operationId: "authorsGET"
      produces:
        - "application/json"
      parameters:
        - name: "offset"
          in: "query"
          description: "Pagination offset. Default is 0."
          required: false
          type: "integer"
        - name: "limit"
          in: "query"
          description: "Maximum number of items per page. Default is 20 and cannot exceed\
          \ 500."
          required: false
          type: "integer"
          default: 20
      responses:
        200:
          description: "A collection of Authors"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Author"
        404:
          description: "Unexpected error"
      x-swagger-router-controller: "Author"
  /authors/{authorId}:
    get:
      tags:
        - "author"
      summary: "Find author by ID"
      description: "Returns a author"
      operationId: "getAuthorById"
      produces:
        - "application/json"
      parameters:
        - name: "authorId"
          in: "path"
          description: "ID of author to return"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Author"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Author not found"
      x-swagger-router-controller: "Author"
  /books/byAuthor/{authorId}:
    get:
      tags:
        - "book"
      summary: "Books by author available in the inventory"
      description: "List of books by author available in the inventory"
      operationId: "booksByAuthorGET"
      produces:
        - "application/json"
      parameters:
        - name: "authorId"
          in: "path"
          description: "ID of author of book"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "A collection of books"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Book"
        404:
          description: "Unexpected error"
      x-swagger-router-controller: "Book"
  /books/byGenre/{genre}:
    get:
      tags:
        - "book"
      summary: "Books by genre available in the inventory"
      description: "List of books by genre available in the inventory"
      operationId: "booksByGenreGET"
      produces:
        - "application/json"
      parameters:
        - name: "genre"
          in: "path"
          description: "Name of genre"
          required: true
          type: "string"
      responses:
        200:
          description: "A collection of books"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Book"
        404:
          description: "Unexpected error"
      x-swagger-router-controller: "Book"
  /books/byTheme/{theme}:
    get:
      tags:
        - "book"
      summary: "Books by theme available in the inventory"
      description: "List of books by theme available in the inventory"
      operationId: "booksByThemeGET"
      produces:
        - "application/json"
      parameters:
        - name: "theme"
          in: "path"
          description: "Id of theme"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "A collection of books"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Book"
        404:
          description: "Unexpected error"
      x-swagger-router-controller: "Book"
  /users:
    get:
      tags:
        - "user"
      summary: "Active users"
      description: "List of users available in the inventory"
      operationId: "usersGET"
      produces:
         - "application/json"
      parameters:
         - name: "offset"
           in: "query"
           description: "Pagination offset. Default is 0."
           required: false
           type: "integer"
         - name: "limit"
           in: "query"
           description: "Maximum number of items per page. Default is 20 and cannot exceed\
               \ 500."
           required: false
           type: "integer"
           default: 20
      responses:
        200:
          description: "A collection of Users"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        404:
          description: "Unexpected error"
      x-swagger-router-controller: "User"
  /users/loggedInUser:
    get:
      tags:
        - "user"
      summary: "Find user that is currently logged in"
      description: "Returns a user"
      operationId: "loggedInUserGET"
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        404:
          description: "User not found"
      x-swagger-router-controller: "User"
  /users/logoutUser:
    get:
      tags:
        - "user"
      summary: "Log out the user that is logged in"
      description: "returns the result of logging out"
      operationId: "logoutUserGET"
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        404:
          description: "User not found"
      x-swagger-router-controller: "User"
  /users/{userId}:
    get:
      tags:
        - "user"
      summary: "Find user by ID"
      description: "Returns a user"
      operationId: "getUserById"
      produces:
        - "application/json"
      parameters:
        - name: "userId"
          in: "path"
          description: "ID of user to return"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Invalid ID supplied"
        404:
          description: "User not found"
      x-swagger-router-controller: "User"
  /reviews:
    get:
      tags:
        - "review"
      summary: "Reviews available in the inventory"
      description: "List of reviews available in the inventory"
      operationId: "reviewsGET"
      produces:
        - "application/json"
      parameters:
        - name: "offset"
          in: "query"
          description: "Pagination offset. Default is 0."
          required: false
          type: "integer"
        - name: "limit"
          in: "query"
          description: "Maximum number of items per page. Default is 20 and cannot exceed\
          \ 500."
          required: false
          type: "integer"
          default: 20
      responses:
        200:
          description: "A collection of reviews"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Review"
        404:
          description: "Unexpected error"
      x-swagger-router-controller: "Review"
  /reviews/{reviewId}:
    get:
      tags:
        - "review"
      summary: "Find review by ID"
      description: "Returns a review"
      operationId: "getReviewById"
      produces:
        - "application/json"
      parameters:
        - name: "reviewId"
          in: "path"
          description: "ID of review to return"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Review"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Review not found"
      x-swagger-router-controller: "Review"
  /reviews/byBook/{bookId}:
    get:
      tags:
        - "review"
      summary: "Find reviews by book ID"
      description: "Returns reviews for one book"
      operationId: "getReviewsByBook"
      produces:
        - "application/json"
      parameters:
        - name: "bookId"
          in: "path"
          description: "ID of book of reviews"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "A collection of reviews"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Review"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Reviews not found"
      x-swagger-router-controller: "Review"
  /events:
    get:
      tags:
        - "event"
      summary: "Events available in the inventory"
      description: "List of events available in the inventory"
      operationId: "eventsGET"
      produces:
        - "application/json"
      parameters:
        - name: "offset"
          in: "query"
          description: "Pagination offset. Default is 0."
          required: false
          type: "integer"
        - name: "limit"
          in: "query"
          description: "Maximum number of items per page. Default is 20 and cannot exceed\
          \ 500."
          required: false
          type: "integer"
          default: 20
      responses:
        200:
          description: "A collection of events"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Event"
        404:
          description: "Unexpected error"
      x-swagger-router-controller: "Event"
  /events/thisMonth:
    get:
      tags:
        - "event"
      summary: "Events this month available in the inventory"
      description: "List of events this month available in the inventory"
      operationId: "eventsThisMonthGET"
      produces:
        - "application/json"
      parameters:
        - name: "offset"
          in: "query"
          description: "Pagination offset. Default is 0."
          required: false
          type: "integer"
        - name: "limit"
          in: "query"
          description: "Maximum number of items per page. Default is 20 and cannot exceed\
          \ 500."
          required: false
          type: "integer"
          default: 20
      responses:
        200:
          description: "A collection of events"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Event"
        404:
          description: "Unexpected error"
      x-swagger-router-controller: "Event"
  /events/{eventId}:
    get:
      tags:
        - "event"
      summary: "Find event by ID"
      description: "Returns a event"
      operationId: "getEventById"
      produces:
        - "application/json"
      parameters:
        - name: "eventId"
          in: "path"
          description: "ID of event to return"
          required: true
          type: "integer"
          format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Event"
        400:
          description: "Invalid ID supplied"
        404:
          description: "Review not found"
      x-swagger-router-controller: "Event"
  /events/byBook/{bookId}:
    get:
      tags:
        - "event"
      summary: "Events available for a particular book in the inventory"
      description: "List of events available for a particular book in the inventory"
      operationId: "getBookEvents"
      produces:
        - "application/json"
      parameters:
        - name: "bookId"
          in: "path"
          description: "ID of event to return"
          required: true
          type: "integer"
          format: "int64"
        - name: "title"
          in: "query"
          description: "Title of the book"
          required: false
          type: "integer"
        - name: "offset"
          in: "query"
          description: "Pagination offset. Default is 0."
          required: false
          type: "integer"
        - name: "limit"
          in: "query"
          description: "Maximum number of items per page. Default is 20 and cannot exceed\
          \ 500."
          required: false
          type: "integer"
          default: 20
      responses:
        200:
          description: "A collection of events"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Event"
        404:
          description: "Unexpected error"
      x-swagger-router-controller: "Event"
  /user/login:
    post:
      tags:
      - "user"
      summary: "Login"
      description: "Login with a form"
      operationId: "userLoginPOST"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "email"
        in: "formData"
        required: true
        type: "string"
      - name: "password"
        in: "formData"
        required: true
        type: "string"
      responses:
        200:
          description: "successful login"
          schema:
            $ref: "#/definitions/User"
        404:
          description: "unauthorized"
      x-swagger-router-controller: "User"
  /user/register:
    post:
      tags:
      - "user"
      summary: "Register"
      description: "Register into the store"
      operationId: "userRegisterPOST"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "formData"
        required: true
        type: "string"
      - name: "password"
        in: "formData"
        required: true
        type: "string"
      - name: "email"
        in: "formData"
        required: true
        type: "string"
      - name: "address"
        in: "formData"
        required: true
        type: "string"
      - name: "creditcard"
        in: "formData"
        required: true
        type: "string"
      responses:
        200:
          description: "successful registration"
          schema:
            $ref: "#/definitions/User"
        404:
          description: "unauthorized"
      x-swagger-router-controller: "User"
  /reviews/create:
    post:
      tags:
      - "review"
      summary: "Create review"
      description: "Create new review"
      operationId: "createReviewPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bookId"
        in: "formData"
        required: true
        type: "integer"
        format: "int64"
      - name: "userId"
        in: "formData"
        required: true
        type: "integer"
        format: "int64"
      - name: "comment"
        in: "formData"
        required: true
        type: "string"
      responses:
        200:
          description: "successful creation"
          schema:
            $ref: "#/definitions/Review"
        404:
          description: "unauthorized"
      x-swagger-router-controller: "Review"
  /cart:
    get:
      tags:
      - "cart"
      summary: "View the content of the cart"
      operationId: "cartGET"
      produces:
      - "application/json"
      responses:
        200:
          description: "succesful operation"
          schema:
            $ref: "#/definitions/Cart"
        404:
          description: "unauthorized"
      x-swagger-router-controller: "Cart"
  /cart/addBook:
    post:
      tags:
      - "cart"
      summary: "Add a book to user's cart"
      description: "Add a book to user's cart"
      operationId: "addBookPOST"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "bookId"
        in: "formData"
        required: true
        type: "integer"
        format: "int64"
      - name: "quantity"
        in: "formData"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful addition"
        404:
          description: "unauthorized"
      x-swagger-router-controller: "Cart"
  /cart/purchaseBooks:
    post:
      tags:
      - "cart"
      summary: "Purchase books in user's cart"
      description: "Purchase books in user's cart"
      operationId: "purchaseBooksPOST"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful purchase"
        404:
          description: "unauthorized"
      x-swagger-router-controller: "Cart"
definitions:
  User:
    type: "object"
    required:
      - "email"
      - "password"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      email:
        type: "string"
        format: "email"
      password:
        type: "string"
      address:
        type: "string"
      creditcard:
        type: "string"
    title: "User"
    description: "A user"
    example:
      id: 1
      name: "Ana Pesko"
      email: "ana.pesko@mail.polimi.it"
      password: "pass"
      address: "DEIB"
      creditcard: "xyzabc"

  Book:
    type: "object"
    required:
      - "author"
      - "price"
      - "title"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
      author:
        $ref: "#/definitions/Author"
      cover:
        type: "string"
      abstract:
        type: "string"
      genre:
        type: "string"
        description: "book genre"
        enum: ["Adventure", "comic", "Crime", "Erotic", "Fiction", "Fantasy", "Historical", "Horror", "Magic", "Realism", "Mystery", "Paranoid", "Philosophical", "Political", "Romance", "Saga", "Satire", "Science", "Thriller", "Urban", "Western"]
      themes:
        type: "array"
        items:
          $ref: "#/definitions/Theme"
      price:
        $ref: "#/definitions/Amount"
      status:
        type: "string"
        description: "book availability in the inventory"
        enum: ["available", "out of stock"]
    title: "Book"
    description: "A book for sale in the store"
    example:
      id: 0
      title: "Il deserto dei tartari"
      author:
        id: 0
        name: "Dino Buzzati"
        picture:
        bio: "Nasce il 16 ottobre 1906 a San Pellegrino, nei pressi di Belluno. Sin dalla giovinezza si manifestano in lui gli interessi, i temi e le passioni del futuro scrittore, ai quali resterà fedele per tutta la vita la poesia, la musica (studia violino e pianoforte e non bisogna dimenticare che in futuro scriverà anche alcuni libretti d'Opera)"
      cover:
      abstract: "La trama segue la vita del sottotenente Giovanni Drogo dal momento in cui, divenuto ufficiale, viene assegnato come prima nomina alla Fortezza Bastiani, molto distante dalla città"
      genre: "Fiction"
      price:
        value: 10
        currency: "eur"
      status: "available"

  Author:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      bio:
        type: "string"
      books:
        type: "array"
        items:
          $ref: "#/definitions/Book"
    title: "Author"
    description: "An author"
    example:
      id: 0
      name: "Dino Buzzati"
      bio: "Nasce il 16 ottobre 1906 a San Pellegrino, nei pressi di Belluno. Sin dalla giovinezza si manifestano in lui gli interessi, i temi e le passioni del futuro scrittore, ai quali resterà fedele per tutta la vita la poesia, la musica (studia violino e pianoforte e non bisogna dimenticare che in futuro scriverà anche alcuni libretti d'Opera)"
      picture:
      books:
        type: "array"
        items:
          $ref: "#/definitions/Book"

  Theme:
    type: "object"
    required:
      - "theme"
    properties:
      id:
        type: "integer"
        format: "int64"
      theme:
        type: "string"
    title: "Theme"
    description: "A theme"
    example:
      id: 0
      theme: "Love"

  Cart:
    type: "object"
    properties:
      total:
        $ref: "#/definitions/Amount"
      books:
        type: "array"
        items:
          $ref: "#/definitions/Book"
    title: "Cart"
    description: "Order for books"
    example:
      total:
        currency: "eur"
        value: 80082819046101.171875
      books:
      - id: 0
        title: "Il deserto dei tartari"
        author: "Dino Buzzati"
        price:
          value: 10
          currency: "eur"
      - id: 0
        title: "Il deserto dei tartari"
        author: "Dino Buzzati"
        price:
          value: 10
          currency: "eur"

  Amount:
    type: "object"
    required:
      - "currency"
      - "value"
    properties:
      value:
        type: "number"
        format: "double"
        minimum: 0.01
        maximum: 1000000000000000
      currency:
        $ref: "#/definitions/Currency"
    description: "Price"
    example:
      currency: "eur"
      value: 602745618307040.375

  Currency:
    type: "string"
    pattern: "^[A-Z]{3,3}$"
    description: "Money system"
    example: "eur"

  Review:
    type: object
    required:
      - comment
      - user
      - book
    properties:
        id:
          type: integer
          format: int64
        comment:
          type: string
        user:
          $ref: "#/definitions/User"
        book:
          $ref: "#/definitions/Book"
    title: Review
    description: A review
    example:
      id: 1
      comment: Love it!
      user:
        id: 1
        name: Andrea Bertini
        email: andrea.bertini@mail.polimi.it
        password: 123456
        address: DEIB
        creditcard: xyzabc
      book:
        id: 1
        title: Il deserto dei tartari
        author:
          id: 1
          name: Dino Buzzati
          biography: Nasce il 16 ottobre 1906 a San Pellegrino, nei pressi di Belluno. Sin dalla giovinezza si manifestano in lui gli interessi, i temi e le passioni del futuro scrittore, ai quali resterà fedele per tutta la vita la poesia, la musica (studia violino e pianoforte e non bisogna dimenticare che in futuro scriverà anche alcuni libretti d'Opera), il disegno, e la montagna, vera compagna dell'infanzia, a cui è anche dedicato il suo primo romanzo, "Barnabo delle montagne".

  Event:
    type: object
    required:
      - location
      - held_on
      - book
    properties:
        id:
          type: integer
          format: int64
        location:
          type: string
        held_on:
          type: string
          format: date
        book:
          $ref: "#/definitions/Book"
    title: Event
    description: An event
    example:
      id: 1
      location: Biblioteca Leonardo
      held_on:
      book:
        id: 1
        title: Il deserto dei tartari
        author:
          id: 1
          name: Dino Buzzati
          biography: Nasce il 16 ottobre 1906 a San Pellegrino, nei pressi di Belluno. Sin dalla giovinezza si manifestano in lui gli interessi, i temi e le passioni del futuro scrittore, ai quali resterà fedele per tutta la vita la poesia, la musica (studia violino e pianoforte e non bisogna dimenticare che in futuro scriverà anche alcuni libretti d'Opera), il disegno, e la montagna, vera compagna dell'infanzia, a cui è anche dedicato il suo primo romanzo, "Barnabo delle montagne".

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
